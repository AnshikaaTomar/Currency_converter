/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mycurrencyconverter;

import javax.swing.JOptionPane;

/**
 *
 * @author anshi
 */
public class CurrencyConverter extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CurrencyConverter.class.getName());

    double dollarInINR = 83.10;
    double yenInINR = 0.53;
    double poundInINR = 105.60;
    double candollarInINR = 61.50;
    double ausdollarInINR = 56.20;
    double yuanInINR = 11.50;
    double euroInINR = 90.20;
    double wonInINR = 0.064;
    double swissInINR = 94.00;
    double pakrupeeInINR = 0.30;
    
    public CurrencyConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLbl1 = new javax.swing.JLabel();
        Currency2 = new javax.swing.JComboBox<>();
        Currency1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jBtn1 = new javax.swing.JButton();
        jBtn2 = new javax.swing.JButton();
        jValue1 = new javax.swing.JTextField();
        jValue2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.darkGray);

        jLbl1.setFont(new java.awt.Font("Viner Hand ITC", 1, 36)); // NOI18N
        jLbl1.setText("Currency Converter ");

        Currency2.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        Currency2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one...", "US Dollar", "Indian Rupee", "Japanese Yen", "Pound Sterling (UK)", "Canadian Dollar", "Australian Dollar", "Chinese Yuan Renminbi", "Euro (Germany)", "South Korean Won", "Swiss Franc", "Pakistani Rupee" }));

        Currency1.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        Currency1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose one...", "US Dollar", "Indian Rupee", "Japanese Yen", "Pound Sterling (UK)", "Canadian Dollar", "Australian Dollar", "Chinese Yuan Renminbi", "Euro (Germany)", "South Korean Won", "Swiss Franc", "Pakistani Rupee" }));
        Currency1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Currency1ItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel1.setText("From:");

        jLabel2.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel2.setText("To:");

        jBtn1.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jBtn1.setText("Convert");
        jBtn1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn1ActionPerformed(evt);
            }
        });

        jBtn2.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jBtn2.setText("Reset");
        jBtn2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn2ActionPerformed(evt);
            }
        });

        jValue1.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N

        jValue2.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLbl1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jValue1)
                    .addComponent(Currency1, javax.swing.GroupLayout.Alignment.LEADING, 0, 256, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Currency2, 0, 256, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jValue2))
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLbl1)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jValue2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jValue1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Currency1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Currency2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Currency1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Currency1ItemStateChanged
        
        
    }//GEN-LAST:event_Currency1ItemStateChanged

    private void jBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn1ActionPerformed
        
        if(Currency1.getSelectedIndex() == 0 || Currency2.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "You must select the country currency.", "Error Messsage", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(jValue1.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "You must enter the amount.", "Error Messsage", JOptionPane.INFORMATION_MESSAGE);
          return;  
        }
        
        //Covert currency logic 
        double amountToChange = Double.parseDouble(jValue1.getText());
        
        //convert to INR first and then into other currencies
        //Initialize the value first
        
        double amountInINR = 0.0;
        
        switch(Currency1.getSelectedItem().toString()){
            case "US Dollar" -> amountInINR = amountToChange * dollarInINR;
                
            case "Indian Rupee" -> amountInINR = amountToChange;
                
            case "Japanese Yen" -> amountInINR = amountToChange * yenInINR;
                
            case "Pound Sterling (UK)" -> amountInINR = amountToChange * poundInINR;
                
            case "Canadian Dollar" -> amountInINR = amountToChange * candollarInINR;
                
            case "Australian Dollar" -> amountInINR = amountToChange * ausdollarInINR;
            
            case "Chinese Yuan Renminbi" -> amountInINR = amountToChange * yuanInINR;
                
            case "Euro(Germany)" -> amountInINR = amountToChange * euroInINR;
                
            case "South Korean Won" -> amountInINR = amountToChange * wonInINR;
                
            case "Swiss Franc" -> amountInINR = amountToChange * swissInINR;
                
            case "Pakistani Rupee" -> amountInINR = amountToChange * pakrupeeInINR;
        }
        
        double amountChanged = 0.0;
        switch(Currency2.getSelectedItem().toString()){
            case "US Dollar" -> amountChanged = amountInINR / dollarInINR;
                
            case "Indian Rupee" -> amountChanged = amountInINR ;
                
            case "Japanese Yen" -> amountChanged = amountInINR / yenInINR;
                
            case "Pound Sterling (UK)" -> amountChanged = amountInINR / poundInINR;
                
            case "Canadian Dollar" -> amountChanged = amountInINR / candollarInINR;
                
            case "Australian Dollar" -> amountChanged = amountInINR / ausdollarInINR;
            
            case "Chinese Yuan Renminbi" -> amountChanged = amountInINR / yuanInINR;
                
            case "Euro(Germany)" -> amountChanged = amountInINR / euroInINR;
                
            case "South Korean Won" -> amountChanged = amountInINR / wonInINR;
                
            case "Swiss Franc" -> amountChanged = amountInINR / swissInINR;
                
           case "Pakistani Rupee" -> amountChanged = amountInINR / pakrupeeInINR;
        }
        
        String finalAmount = String.format("%.2f", amountChanged);
        
        jValue2.setText(finalAmount);
        
    }//GEN-LAST:event_jBtn1ActionPerformed

    private void jBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn2ActionPerformed
        //reset the converter
        
        Currency1.setSelectedIndex(0);
        Currency2.setSelectedIndex(0);
        
        jValue1.setText(null);
        jValue2.setText(null);
    }//GEN-LAST:event_jBtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                } else {
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new CurrencyConverter().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Currency1;
    private javax.swing.JComboBox<String> Currency2;
    private javax.swing.JButton jBtn1;
    private javax.swing.JButton jBtn2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLbl1;
    private javax.swing.JTextField jValue1;
    private javax.swing.JTextField jValue2;
    // End of variables declaration//GEN-END:variables
}
